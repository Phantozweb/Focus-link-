
import Link from 'next/link';
import Image from 'next/image';
import type { UserProfile } from '@/types';
import { Button } from '@/components/ui/button';
import { CheckCircle2, User } from 'lucide-react';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';


interface ProfileCardProps {
  user: UserProfile;
  hideButton?: boolean;
}

export function ProfileCard({ user, hideButton }: ProfileCardProps) {
  const isOrg = ['Association', 'College', 'Hospital', 'Optical', 'Industry'].includes(user.type);
  
  const getAvatarHint = () => {
    if (isOrg) return "logo building";
    if (user.type === 'Student') return "portrait person";
    return "portrait person";
  }

  // Card without banner for individuals
  return (
    <div className="group flex flex-col rounded-lg border border-gray-200 bg-white shadow-sm transition-all duration-300 hover:shadow-lg h-full">
        <div className="flex flex-1 flex-col p-6 items-center text-center">
             <Avatar className="w-24 h-24 rounded-full object-cover border-4 border-white shadow-md mb-4">
              {user.avatarUrl ? (
                <AvatarImage src={user.avatarUrl} alt={user.name} className="object-cover" style={{ objectPosition: 'center 20%' }} data-ai-hint={getAvatarHint()} />
              ) : null}
              <AvatarFallback className="text-4xl">
                {user.avatarUrl ? (user.name?.charAt(0) ?? 'U') : <User className="h-12 w-12" />}
              </AvatarFallback>
            </Avatar>
            <h3 className="text-lg font-bold text-slate-800 flex items-center gap-2">
              {user.name}
              {user.verified && <CheckCircle2 className="h-5 w-5 text-primary" />}
            </h3>
            <p className="text-sm text-cyan-600">{user.experience}</p>
            <p className="text-sm text-gray-500 flex-grow mt-2">{user.bio ? `${user.bio.substring(0,100)}...` : 'Bio will be generated by AI.'}</p>
            {!hideButton && (
              <div className="flex gap-2 mt-4 w-full">
                  <Button asChild className="h-10 flex-1">
                    <Link href={`/profile/${user.id}`}>View Profile</Link>
                  </Button>
              </div>
            )}
        </div>
    </div>
  )
}
